{
  "context": {
    "include": [
      "TEST_GUIDE.md",
      "**/*_test.rs",
      "**/*.spec.ts",
      "**/*.test.ts",
      "**/*.e2e.ts",
      "tests/**/*.rs",
      "src/**/*.rs",
      "packages/**/*.ts",
      "examples/**/*.ts"
    ],
    "exclude": [
      "target/**",
      "node_modules/**",
      "dist/**",
      "build/**",
      "coverage/**",
      ".next/**",
      "*.lock",
      "*.lockb"
    ]
  },
  "rules": {
    "rust": {
      "style_guide": "TEST_GUIDE.md",
      "conventions": {
        "file_naming": "*_test.rs for tests, snake_case.rs for modules",
        "function_naming": "snake_case",
        "test_function_naming": "snake_case with action_condition format",
        "assertion_style": "standard Rust macros (assert!, assert_eq!, assert_ne!)",
        "error_handling": "Result<T, E> for fallible operations",
        "module_structure": "mod.rs or lib.rs entry points"
      },
      "linting": {
        "tool": "clippy",
        "level": "strict",
        "deny": ["warnings", "clippy::all"]
      }
    },
    "typescript": {
      "conventions": {
        "file_naming": "kebab-case.ts, PascalCase for components",
        "function_naming": "camelCase",
        "test_naming": "*.spec.ts for unit tests, *.e2e.ts for e2e tests",
        "type_naming": "PascalCase for types/interfaces",
        "constant_naming": "SCREAMING_SNAKE_CASE"
      },
      "testing": {
        "framework": "jest or vitest",
        "patterns": ["describe/it blocks", "arrange-act-assert"],
        "mocking": "prefer dependency injection over mocks"
      },
      "style": {
        "formatting": "prettier",
        "linting": "eslint",
        "strict_mode": true,
        "no_any": true
      }
    },
    "general": {
      "code_style": {
        "max_line_length": 100,
        "indentation": "2 spaces for TS/JS, 4 spaces for Rust",
        "trailing_commas": true,
        "semicolons": true
      },
      "documentation": {
        "functions": "document public APIs",
        "types": "document complex types and interfaces",
        "examples": "provide usage examples for public APIs"
      }
    }
  }
}
