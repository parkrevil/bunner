openapi: 3.0.0
info:
  title: Bunner API Document Example
  description: Bunner Framework API Documentation Example
  version: 1.0.0
  contact:
    name: Bunner Team
    email: support@bunner.dev
servers:
  - url: http://localhost:4000
    description: Development server
paths:
  /api/users:
    get:
      summary: Get users list
      description: Retrieve a list of all users
      responses:
        '200':
          description: Successfully retrieved users list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create new user
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Successfully created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}:
    get:
      summary: Get specific user
      description: Retrieve a specific user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        name:
          type: string
          description: User name
        email:
          type: string
          format: email
          description: User email
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - id
        - name
        - email
    UserInput:
      type: object
      properties:
        name:
          type: string
          description: User name
        email:
          type: string
          format: email
          description: User email
      required:
        - name
        - email
